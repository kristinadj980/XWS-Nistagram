version: "3.8"

services:
  media-microservice:
    image: media-microservice
    container_name: media-microservice
    build:
      context: ./media-microservice
      dockerfile: Dockerfile
    tty: true
    networks:
      - demo
    ports:
      - "8085:8085"
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: bazabaza
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: mediaMicroservice?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on:
      - mysql
   
  profile-microservice:
    image: profile-microservice
    container_name: profile-microservice
    build:
      context: ./profileMicroservice
      dockerfile: Dockerfile
    tty: true
    restart: on-failure
    networks:
      - demo
    ports:
      - "8087:8087"
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: bazabaza
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: profileMicroservice?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on:
      - mysql
      
  search-microservice:
    image: search-microservice
    container_name: search-microservice
    build:
      context: ./search-microservice
      dockerfile: Dockerfile
    tty: true
    networks:
      - demo
    ports:
      - "8088:8088"
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: bazabaza
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: searchMicroservice?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on:
      - mysql
      
  security-microservice:
    image: security-microservice
    container_name: security-microservice
    build:
      context: ./security-microservice
      dockerfile: Dockerfile
    tty: true
    networks:
      - demo
    ports:
      - "8090:8090"
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: bazabaza
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: securityMicroservice?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on:
      - mysql 
      
  mysql:
    image: mysql:8.0.19
    container_name: mysql
    restart: always
    ports:
      - "3307:3306"
    networks:
      - demo
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: bazabaza
      MYSQL_USER: root
      MYSQL_PASSWORD: bazabaza
  
      
networks:
  demo:
    name: demo
    driver: bridge